
package lexical.scanner.mini.c;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author bryan
 */
public class GraphicInterface extends javax.swing.JFrame {
    
    private String path;
    private String fileName;
    
    public GraphicInterface() {
        initComponents();
        path = "";
        fileName = "";
        btnAnalize.setEnabled(false);
        btnSaveOutFile.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUploadFile = new javax.swing.JButton();
        btnCompileLexer = new javax.swing.JButton();
        btnAnalize = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tAFileIn = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAFileOut = new javax.swing.JTextArea();
        btnSaveOutFile = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnCleanTexts = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Analizador Léxico - Mini C#");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        btnUploadFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/carpeta.png"))); // NOI18N
        btnUploadFile.setMaximumSize(new java.awt.Dimension(150, 75));
        btnUploadFile.setPreferredSize(new java.awt.Dimension(64, 64));
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        btnCompileLexer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/equipo.png"))); // NOI18N
        btnCompileLexer.setPreferredSize(new java.awt.Dimension(64, 64));
        btnCompileLexer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompileLexerActionPerformed(evt);
            }
        });

        btnAnalize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/analisis.png"))); // NOI18N
        btnAnalize.setPreferredSize(new java.awt.Dimension(64, 64));
        btnAnalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizeActionPerformed(evt);
            }
        });

        jLabel1.setText("Cargar Archivo");

        jLabel2.setText("Analizar");

        jLabel3.setText("Compilar Analizador");

        jLabel4.setText("Contenido del archivo");

        jLabel5.setText("Archivo de salida");

        tAFileIn.setEditable(false);
        tAFileIn.setColumns(20);
        tAFileIn.setRows(5);
        jScrollPane1.setViewportView(tAFileIn);

        tAFileOut.setEditable(false);
        tAFileOut.setColumns(20);
        tAFileOut.setRows(5);
        jScrollPane2.setViewportView(tAFileOut);

        btnSaveOutFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/disquete.png"))); // NOI18N
        btnSaveOutFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveOutFileActionPerformed(evt);
            }
        });

        jLabel6.setText("Guardar Análisis");

        btnCleanTexts.setText("Limpiar Textos");
        btnCleanTexts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanTextsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAnalize, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnSaveOutFile, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCompileLexer, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(71, 71, 71))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5)))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCleanTexts)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCompileLexer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAnalize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUploadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSaveOutFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCleanTexts)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode( JFileChooser.FILES_ONLY );
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Mini C#", "frag");
        chooser.setFileFilter(filter);
        int selection  = chooser.showOpenDialog(this);
        
        if(selection == JFileChooser.APPROVE_OPTION){        
            if(chooser.getSelectedFile() != null) {
                path = chooser.getSelectedFile().getAbsolutePath();
                fileName = chooser.getSelectedFile().getName();
                fileName = fileName.replace(".frag", "");

                File file = new File(path);

                if(file.exists()){                   
                    try{
                        String line = "";
                        String content = "";
                        FileReader f = new FileReader(path);
                        BufferedReader reader = new BufferedReader(f);
                        while((line = reader.readLine()) != null){
                            content += line+"\r\n";
                        }
                        
                        //Display text
                        tAFileIn.setText(content);
                        tAFileIn.setCaretPosition(0);
                        btnAnalize.setEnabled(true);
                        
                        JOptionPane.showMessageDialog(null,
                        "El archivo se ha cargado correctamente.",
                        "Información",JOptionPane.INFORMATION_MESSAGE);
                        
                        btnAnalize.setEnabled(true);
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,
                        "No se ha podido cargar el archivo. \nError: " + e.getMessage(),
                        "ERROR",JOptionPane.ERROR_MESSAGE);
                    }                  
                }
                else{
                    JOptionPane.showMessageDialog(null,
                    "El archivo seleccionado no puede ser encontrado.",
                    "ERROR",JOptionPane.ERROR_MESSAGE);
                }
            } 
        }           
    }//GEN-LAST:event_btnUploadFileActionPerformed

    private void btnCompileLexerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompileLexerActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode( JFileChooser.FILES_ONLY );
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Lexicos", "flex");
        chooser.setFileFilter(filter);
        int selection  = chooser.showOpenDialog(this);
        
        if(selection == JFileChooser.APPROVE_OPTION){     
            if(chooser.getSelectedFile() != null){
                path = chooser.getSelectedFile().getAbsolutePath();

                File file = new File(path);

                if(file.exists()){   
                    try{
                        //Compilar el archivo .Flex
                        jflex.Main.main(new String[]{path});
                        
                        JOptionPane.showMessageDialog(null,
                        "El archivo (.flex) ha compilado correctamente.",
                        "Aviso",JOptionPane.INFORMATION_MESSAGE);
                        
                        System.exit(0);
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null,
                        "No se ha podido compilar el archivo (.flex).",
                        "ERROR",JOptionPane.ERROR_MESSAGE);
                    }                  
                }
                else{
                    JOptionPane.showMessageDialog(null,
                    "El archivo seleccionado no puede ser encontrado.",
                    "ERROR",JOptionPane.ERROR_MESSAGE);
                }
            } 
        }  
    }//GEN-LAST:event_btnCompileLexerActionPerformed

    private void btnAnalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizeActionPerformed

        ArrayList<Yytoken> tokens = null;
        
        //Upload file of the path
        BufferedReader reader = null;
        try {
            //Ruta del archivo especificado por el usuario
            reader = new BufferedReader(new FileReader(path));
            LexicalScanner lexer = new LexicalScanner(reader);
            
            Yytoken token = null;
            
            while(true){
                token = lexer.nextToken();
                
                if(token==null){
                    break;
                }else{
                    System.out.println(token.toString());
                }
            }          
            tokens = lexer.tokens;
            reader.close();
            
            String content = "";
            
            //Put result on display
            for(Yytoken element: tokens){
                if(element.error){
                    content += element.isError() + "\r\n";
                }
                else{
                    content += element.toString() + "\r\n";
                }
            }
            
            tAFileOut.setText(content);
            tAFileOut.setCaretPosition(0);
            btnAnalize.setEnabled(false);
            btnSaveOutFile.setEnabled(true);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
        }     
    }//GEN-LAST:event_btnAnalizeActionPerformed

    private void btnSaveOutFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveOutFileActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,
                    "Seleccione la ubicación donde desea almacenar el archivo.out",
                    "Aviso",JOptionPane.INFORMATION_MESSAGE);
        
        File file = new File(fileName + ".out");
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de salida", "out");
        chooser.setFileFilter(filter);     
        chooser.setSelectedFile(file);
        
        int selection  = chooser.showSaveDialog(this);
        
        if(selection == JFileChooser.APPROVE_OPTION)
            {
                try {  
                    String name = chooser.getSelectedFile().getAbsolutePath();
                   
                    if(!name.contains(".out")){
                        name = name + ".out";
                    }
                                 
                    file = new File(name);
                    FileWriter writer = null;
                    BufferedWriter bw = null;
                    
                    if(file.exists()){
                        file.delete();
                        writer = new FileWriter(file);
                        bw = new BufferedWriter(writer);
                        bw.write(tAFileOut.getText());
                        bw.close();
                    }else{
                        writer = new FileWriter(file);
                        bw = new BufferedWriter(writer);
                        bw.write(tAFileOut.getText());
                        bw.close();                     
                    }
                    
                    JOptionPane.showMessageDialog(null,
                    "El archivo se ha guardado correctamente.",
                    "Información",JOptionPane.INFORMATION_MESSAGE);
                                       
                } catch (IOException ex) {
                    Logger.getLogger(GraphicInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }  
        
    }//GEN-LAST:event_btnSaveOutFileActionPerformed

    private void btnCleanTextsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanTextsActionPerformed
        tAFileOut.setText(null);
        tAFileIn.setText(null);
        btnAnalize.setEnabled(false);
        btnSaveOutFile.setEnabled(false);
    }//GEN-LAST:event_btnCleanTextsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphicInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalize;
    private javax.swing.JButton btnCleanTexts;
    private javax.swing.JButton btnCompileLexer;
    private javax.swing.JButton btnSaveOutFile;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea tAFileIn;
    private javax.swing.JTextArea tAFileOut;
    // End of variables declaration//GEN-END:variables
}
